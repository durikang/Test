name: Auto Tag

on:
  push:
    branches:
      - master  # 현재 브랜치에 맞게 설정 (main이 아닌 master로 설정)

jobs:
  tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Git
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@github.com"

      - name: Get latest tag
        id: get_tag
        run: |
          git fetch --tags
          # 최신 태그 가져오기 (태그가 없을 경우 v1.0.0으로 시작)
          TAG=$(git describe --tags `git rev-list --tags --max-count=1` || echo "v1.0.0")
          echo "Latest tag is: $TAG"
          echo "::set-output name=TAG::$TAG"

      - name: Create new tag
        id: create_tag
        run: |
          # 최신 태그 버전을 증가시켜 새로운 태그 생성
          NEW_TAG=${{ steps.get_tag.outputs.TAG }}
          while git rev-parse "refs/tags/$NEW_TAG" >/dev/null 2>&1; do
            NEW_TAG=$(echo $NEW_TAG | awk -F. '{$NF++; print $0}' OFS=.)
          done
          echo "New tag is: $NEW_TAG"
          echo "::set-output name=NEW_TAG::$NEW_TAG"
          git tag $NEW_TAG
          git push origin $NEW_TAG

      - name: Trigger Release Workflow
        uses: actions/github-script@v4
        with:
          script: |
            const newTag = process.env.NEW_TAG;
            github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: newTag,
              name: `Release ${newTag}`,
              draft: false,
              prerelease: false
            });
        env:
          NEW_TAG: ${{ steps.create_tag.outputs.NEW_TAG }}
